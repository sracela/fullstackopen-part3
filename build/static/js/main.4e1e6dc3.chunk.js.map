{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notification.js","components/Error.js","services/contacts.js","App.js","index.js"],"names":["Filter","newFilter","handleFilterChange","value","onChange","PersonForm","props","onSubmit","addContact","newName","handleNameChange","newNumber","handleNumberChange","type","Person","person","deleteContact","name","number","onClick","Persons","personsToShow","deleteContactNumber","map","key","id","Notification","message","className","Error","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","persons","setPersons","setNewName","setNewNumber","setNewFilter","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","contactService","initialContacts","filter","toLowerCase","includes","event","target","preventDefault","newContact","undefined","find","returnedContact","console","log","setTimeout","concat","catch","error","n","changedPerson","window","confirm","returnedPerson","p","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e1e6dc3.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({ newFilter, handleFilterChange }) => {  \n    return (\n        <div>\n        filter shown with: <input \n            value={newFilter}\n            onChange={handleFilterChange}\n        />\n        </div>\n    )\n}\n\nexport default Filter","import React from 'react';\n\nconst PersonForm = (props) => {  \n    return (\n    <form onSubmit={props.addContact}>\n        <div>\n          name: <input \n            value={props.newName}\n            onChange={props.handleNameChange}\n          />\n        </div>\n        <div>\n          number: <input \n            value={props.newNumber}\n            onChange={props.handleNumberChange}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n    </form>\n    )\n}\n\nexport default PersonForm","import React from 'react';\n// const Person = ({ person }) => <p>{person.name} {person.number}</p>\nconst Person = ({ person, deleteContact }) => {\n  \n    return (\n      <li>\n        {person.name} {person.number}\n        <button onClick={deleteContact}>delete</button>\n      </li>\n    )\n  }\n\nexport default Person","import React from 'react';\nimport Person from './Person';\n\nconst Persons = ({ personsToShow, deleteContactNumber }) => {  \n    return (\n      <div>\n      {personsToShow.map((person) => <Person key={person.id} person={person} deleteContact={() => deleteContactNumber(person.id)} />)}\n      </div>\n    )\n}\n\nexport default Persons","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"notification\">\n        {message}\n      </div>\n    )\n  }\n\nexport default Notification","import React from 'react'\n\nconst Error = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\nexport default Error","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deleteObject = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, deleteObject }\n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport Error from './components/Error'\nimport contactService from './services/contacts'\n\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter] = useState('')\n  const [successMessage, setSuccessMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    contactService\n      .getAll()\n      .then(initialContacts => {\n        setPersons(initialContacts)\n      })\n  }, [])\n\n  const addContact = (event) => {\n    event.preventDefault()\n    // console.log(event.target)\n    const newContact = {\n      name: newName,\n      number: newNumber\n    }\n    const b = persons.find((person) => person.name.toLowerCase() === newContact.name.toLowerCase())\n    if(b === undefined){\n      // setPersons(persons.concat(newContact))\n      contactService\n      .create(newContact)\n      .then(returnedContact => {\n        console.log(returnedContact.id)\n        setSuccessMessage(\n          `Added '${returnedContact.name}'`\n        )\n        setTimeout(() => {\n          setSuccessMessage(null)\n        }, 5000)\n        setPersons(persons.concat(returnedContact))    \n        setNewName('')\n        setNewNumber('')\n      })\n      .catch(error => {\n        setErrorMessage(\n          `${error.response.data.error}`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n\n    }else{\n      const person = persons.find(n => n.name.toLowerCase() === newName.toLowerCase())\n      const changedPerson = { ...person, number: newNumber }\n      if (window.confirm(` ${person.name} is already added to the phonebook, replace the old number with a new one ?`)){ \n        contactService\n          .update(person.id, changedPerson)\n          .then(returnedPerson => {\n            setSuccessMessage(\n              `Updated '${person.name}'`\n            )\n            setTimeout(() => {\n              setSuccessMessage(null)\n            }, 5000)\n            setPersons(persons.map(p => p.id !== person.id ? p : returnedPerson))\n          })\n          .catch(error => {\n            setErrorMessage(\n              `The contact '${person.name}' has already been removed from server`\n            )\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n            setPersons(persons.filter(n => n.id !== person.id))\n          })\n      }\n    }\n\n  }\n\n  const deleteContactNumber = id => {\n    const person = persons.find(n => n.id === id)\n    if (window.confirm(`delete contact ${person.name} ?`)){ \n      // console.log('delete person', id)\n      contactService\n        .deleteObject(id)\n        .then(response => {\n          setSuccessMessage(\n            `Deleted '${person.name}'`\n          )\n          setTimeout(() => {\n            setSuccessMessage(null)\n          }, 5000)\n          setPersons(persons.filter(n => n.id !== id))\n        })\n        .catch(error => {\n          setErrorMessage(\n            `The contact '${person.name}' has already been removed from server`\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n          setPersons(persons.filter(n => n.id !== person.id))\n        })\n\n    }\n  }\n\n  const handleNameChange = (event) => {\n    // console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    // console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const personsToShow = newFilter === ''\n  ? persons\n  : persons.filter((person) => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n        <Notification message={successMessage} />\n        <Error message={errorMessage} />\n        <Filter newFilter={newFilter} handleFilterChange={handleFilterChange} />\n      <h2>add a new</h2>\n        <PersonForm \n          addContact={addContact}\n          newName={newName}\n          handleNameChange={handleNameChange}\n          newNumber={newNumber}\n          handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n        <Persons personsToShow={personsToShow} deleteContactNumber={deleteContactNumber} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}